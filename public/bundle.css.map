{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/componentes/DragDrop.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport interact from 'interactjs'\n//\n$: width = window.innerWidth\n$: height = window.innerHeight\nconst resize = () => {\n  window.onresize = (e) => {\n    width = e.target.innerWidth\n    height = e.target.innerHeight\n  }\n}\nconst itemDrag = '.dragall'\n// colores paths\nconst colorDrag = 'orange'\nconst colorDragging = 'lime'\nconst colorArea = 'purple'\nconst colorEnterArea = 'lightgray'\nconst colorSnapped = 'gray'\n// PATHS:\nconst pathsDrop = [\n  {\n    id: \"circulo-area\",\n    class: \"drop-1 dropall\",\n    d: \"M532.65 254.94C532.65 352.36 453.56 431.45 356.14 431.45C258.73 431.45 179.64 352.36 179.64 254.94C179.64 157.52 258.73 78.43 356.14 78.43C453.56 78.43 532.65 157.52 532.65 254.94Z\",\n    opacity:\"1\",\n    fill: colorArea\n  },\n  {\n    id: \"triangulo-area\",\n    class: \"drop-2 dropall\",\n    d: \"M426.63 374.82L180.84 377.23L300.12 86.87L426.63 374.82Z\",\n    opacity:\"1\",\n    fill: colorArea\n  },\n  {\n    id: \"irregular-area\",\n    class: \"drop-3 dropall\",\n    d: \"M473.61 66.39L437.47 172.41L433.86 219.4L324.22 239.88L403.73 272.41L349.52 285.66L339.88 342.29L282.05 304.94L274.82 355.54L236.27 300.12L207.35 219.4L232.65 133.86L473.61 66.39Z\",\n    opacity:\"1\",\n    fill: colorArea\n  },\n  {\n    id: \"cuadrado-area\",\n    class: \"drop-4 dropall\",\n    d: \"M112.17 79.64L495.3 79.64L495.3 459.16L112.17 459.16L112.17 79.64Z\",\n    opacity:\"1\",\n    fill: colorArea\n  }\n]\nconst pathsDrag = [\n  {\n    id: \"circulo-drag\",\n    class: \"dragall\",\n    d: \"M532.65 254.94C532.65 352.36 453.56 431.45 356.14 431.45C258.73 431.45 179.64 352.36 179.64 254.94C179.64 157.52 258.73 78.43 356.14 78.43C453.56 78.43 532.65 157.52 532.65 254.94Z\",\n    opacity:\"1\",\n    fill: colorDrag\n  },\n  {\n    id: \"triangulo-drag\",\n    class: \"dragall\",\n    d: \"M426.63 374.82L180.84 377.23L300.12 86.87L426.63 374.82Z\",\n    opacity:\"1\",\n    fill: colorDrag\n  },\n  {\n    id: \"irregular-drag\",\n    class: \"dragall\",\n    d: \"M473.61 66.39L437.47 172.41L433.86 219.4L324.22 239.88L403.73 272.41L349.52 285.66L339.88 342.29L282.05 304.94L274.82 355.54L236.27 300.12L207.35 219.4L232.65 133.86L473.61 66.39Z\",\n    opacity:\"1\",\n    fill: colorDrag\n  },\n  {\n    id: \"cuadrado-drag\",\n    class: \"dragall\",\n    d: \"M112.17 79.64L495.3 79.64L495.3 459.16L112.17 459.16L112.17 79.64Z\",\n    opacity:\"1\",\n    fill: colorDrag\n  }\n]\n//\nconst configuraDrag = () => {\n  interact(itemDrag).draggable({\n    inertia: true,\n    modifiers: [\n      interact.modifiers.restrictRect({\n        restriction: 'svg',\n        endOnly: true\n      })\n    ],\n    // autoScroll: true,\n    onmove: dragMoveListener,\n    onend: (e) => {\n      e.target.style.fill = colorDrag// area\n      console.log('Fin')\n    }\n\n  })\n}\n\nconst dragMoveListener = (e) => {\n\n  let target = e.target\n  console.log(\"Moviendo: \")\n  // aplica los valores en los atributos data-\n  var x = (parseFloat(target.getAttribute('data-x')) || 0) + e.dx\n  var y = (parseFloat(target.getAttribute('data-y')) || 0) + e.dy\n  // translate the element\n  target.style.webkitTransform =\n  target.style.transform =\n  'translate(' + x + 'px, ' + y + 'px)'\n\n  // update the position attributes\n  target.setAttribute('data-x', x)\n  target.setAttribute('data-y', y)\n}\n//\nconst configuraDrop = (interactObj, acceptObj) => {\n\n  interact(interactObj).dropzone({\n    accept: acceptObj,\n    overlap: 0.10,//10% encima del area\n    // Eventos relacionados al 'drop':\n    ondropactivate: (e) => {\n      e.target.style.fill = colorDragging// area\n      e.relatedTarget.style.fill = colorDragging//dragged obj\n    },\n    // Al entrar en zona de 'drop'\n    ondragenter: (e) => {\n      e.target.style.fill = colorEnterArea\n      e.relatedTarget.style.fill = colorEnterArea\n    },\n    // Al soltarlo dentro de la zona de 'drop'\n    ondrop: (e) => {\n      let dropzone = e.target.getBoundingClientRect()\n      let obj = e.relatedTarget\n      let x = 0//dropzone.x\n      let y = 0//dropzone.y\n      // snap\n      obj.style.webkitTransform =\n      obj.style.transform =\n      'translate(' + x + 'px, ' + y    + 'px)'\n      obj.setAttribute('data-x', x)\n      obj.setAttribute('data-y', y)\n      //\n      e.target.style.fill = colorSnapped\n      e.relatedTarget.style.fill = colorSnapped\n    },\n    //Al salir del 'dropzone'\n    ondragleave: (e) => {\n      e.target.style.fill = colorDragging\n      e.relatedTarget.style.fill = colorDragging\n    },\n    // Al dejar fuera de la zona de 'drop'\n    ondropdeactivate: (e) => {\n      e.target.style.fill = colorArea// area\n    }\n  })\n}\n\n//llamadas\nresize()\nconfiguraDrag()\nconfiguraDrop(\"#cuadrado-area\",'#cuadrado-drag')\nconfiguraDrop(\"#triangulo-area\",'#triangulo-drag')\nconfiguraDrop(\"#irregular-area\",'#irregular-drag')\nconfiguraDrop(\"#circulo-area\",'#circulo-drag')\n//\n</script>\n<!-- Estilos -->\n<style>\n#svg-contenedor {\n  height: 100vh;\n  width: 100vw;\n}\n</style>\n<!-- HTML  -->\n<section>\n<!--  -->\n\n<svg id=\"svg-contenedor\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\nviewBox={`0 0 ${width} ${height}`}\nwidth={`${width}px`}\nheight={`${height}px`}\n>\n<!-- Drops Areas -->\n  {#each pathsDrop as path}\n    <path\n    on:create={e => console.log(e.target)}\n    d={path.d}\n    id={path.id}\n    class={path.class}\n    opacity={path.opacity}\n    fill={path.fill}\n    ></path>\n  {/each}\n\n<!-- draggables -->\n  {#each pathsDrag as path}\n    <path\n    d={path.d}\n    id={path.id}\n    class={path.class}\n    opacity={path.opacity}\n    fill={path.fill}\n    ></path>\n  {/each}\n\n</svg>\n\n</section>\n"
  ],
  "names": [],
  "mappings": "AA0KA,eAAe,cAAC,CAAC,AACf,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,AACd,CAAC"
}